{"ast":null,"code":"this.instance.interceptors.response.use(response => {\n  const {\n    url\n  } = response.config;\n  if (url === URL_LOGIN || url === URL_REGISTER) {\n    const result = response.data;\n\n    // Kiểm tra phản hồi từ API\n    if (!result || typeof result !== 'object') {\n      console.error('Invalid API response:', response);\n      return Promise.reject(new Error('Invalid API response'));\n    }\n    const {\n      id,\n      username,\n      accessToken,\n      refreshToken,\n      roles,\n      avatar\n    } = result;\n    if (!id || !username || !accessToken || !refreshToken) {\n      console.error('Missing required fields in API response:', result);\n      return Promise.reject(new Error('Incomplete API response'));\n    }\n    this.accessToken = accessToken;\n    this.refreshToken = refreshToken;\n    const formattedRoles = mapBackendRolesToFrontend(roles);\n\n    // Lưu token và profile vào localStorage\n    setAccessTokenToLS(accessToken);\n    setRefreshTokenToLS(refreshToken);\n    setProfileToLS({\n      id,\n      username,\n      roles: formattedRoles,\n      avatar: avatar !== null && avatar !== void 0 ? avatar : undefined\n    });\n  } else if (url === URL_LOGOUT) {\n    this.accessToken = '';\n    this.refreshToken = '';\n    clearLS();\n  }\n  return response;\n}, error => {\n  var _error$response;\n  if (![HttpStatusCode.UnprocessableEntity, HttpStatusCode.Unauthorized].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n    var _error$response2;\n    const data = (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data;\n    const message = (data === null || data === void 0 ? void 0 : data.message) || error.message;\n    toast.error(message);\n  }\n  if (isAxiosErrorUnauthorized(error)) {\n    var _error$response3, _error$response4, _error$response4$data;\n    const config = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.config) || {\n      headers: {}\n    };\n    const {\n      url\n    } = config;\n    if (isExpiredTokenError(error) && url !== URL_REFRESH_TOKEN) {\n      this.refreshTokenRequest = this.refreshTokenRequest ? this.refreshTokenRequest : this.handleRefreshToken().then(accessToken => {\n        this.accessToken = accessToken;\n        setAccessTokenToLS(accessToken);\n        return accessToken;\n      }).finally(() => {\n        setTimeout(() => {\n          this.refreshTokenRequest = null;\n        }, 3000);\n      });\n      return this.refreshTokenRequest;\n    }\n    this.accessToken = '';\n    this.refreshToken = '';\n    clearLS();\n    toast.error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Session expired. Please log in again.');\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["instance","interceptors","response","use","url","config","URL_LOGIN","URL_REGISTER","result","data","console","error","Promise","reject","Error","id","username","accessToken","refreshToken","roles","avatar","formattedRoles","mapBackendRolesToFrontend","setAccessTokenToLS","setRefreshTokenToLS","setProfileToLS","undefined","URL_LOGOUT","clearLS","_error$response","HttpStatusCode","UnprocessableEntity","Unauthorized","includes","status","_error$response2","message","toast","isAxiosErrorUnauthorized","_error$response3","_error$response4","_error$response4$data","headers","isExpiredTokenError","URL_REFRESH_TOKEN","refreshTokenRequest","handleRefreshToken","then","finally","setTimeout"],"sources":["/Volumes/MAC_Quandev03/Code/JS/Shopee/src/api/api.ts"],"sourcesContent":["this.instance.interceptors.response.use(\n    (response) => {\n      const { url } = response.config;\n      if (url === URL_LOGIN || url === URL_REGISTER) {\n        const result = response.data as AuthResponses;\n\n        // Kiểm tra phản hồi từ API\n        if (!result || typeof result !== 'object') {\n          console.error('Invalid API response:', response);\n          return Promise.reject(new Error('Invalid API response'));\n        }\n\n        const { id, username, accessToken, refreshToken, roles, avatar } = result;\n\n        if (!id || !username || !accessToken || !refreshToken) {\n          console.error('Missing required fields in API response:', result);\n          return Promise.reject(new Error('Incomplete API response'));\n        }\n\n        this.accessToken = accessToken;\n        this.refreshToken = refreshToken;\n        const formattedRoles: Role[] = mapBackendRolesToFrontend(roles);\n\n        // Lưu token và profile vào localStorage\n        setAccessTokenToLS(accessToken);\n        setRefreshTokenToLS(refreshToken);\n        setProfileToLS({ id, username, roles: formattedRoles, avatar: avatar ?? undefined });\n      } else if (url === URL_LOGOUT) {\n        this.accessToken = '';\n        this.refreshToken = '';\n        clearLS();\n      }\n\n      return response;\n    },\n    (error: AxiosError) => {\n      if (![HttpStatusCode.UnprocessableEntity, HttpStatusCode.Unauthorized].includes(error.response?.status as number)) {\n        const data: any = error.response?.data;\n        const message = data?.message || error.message;\n        toast.error(message);\n      }\n\n      if (isAxiosErrorUnauthorized<ResponseErrorType<{ name: string; message: string }>>(error)) {\n        const config = error.response?.config || ({ headers: {} } as InternalAxiosRequestConfig);\n        const { url } = config;\n\n        if (isExpiredTokenError(error) && url !== URL_REFRESH_TOKEN) {\n          this.refreshTokenRequest = this.refreshTokenRequest\n              ? this.refreshTokenRequest\n              : this.handleRefreshToken()\n                  .then((accessToken) => {\n                    this.accessToken = accessToken;\n                    setAccessTokenToLS(accessToken);\n                    return accessToken;\n                  })\n                  .finally(() => {\n                    setTimeout(() => {\n                      this.refreshTokenRequest = null;\n                    }, 3000);\n                  });\n\n          return this.refreshTokenRequest;\n        }\n\n        this.accessToken = '';\n        this.refreshToken = '';\n        clearLS();\n        toast.error(error.response?.data?.message || 'Session expired. Please log in again.');\n      }\n\n      return Promise.reject(error);\n    }\n);"],"mappings":"AAAA,IAAI,CAACA,QAAQ,CAACC,YAAY,CAACC,QAAQ,CAACC,GAAG,CAClCD,QAAQ,IAAK;EACZ,MAAM;IAAEE;EAAI,CAAC,GAAGF,QAAQ,CAACG,MAAM;EAC/B,IAAID,GAAG,KAAKE,SAAS,IAAIF,GAAG,KAAKG,YAAY,EAAE;IAC7C,MAAMC,MAAM,GAAGN,QAAQ,CAACO,IAAqB;;IAE7C;IACA,IAAI,CAACD,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MACzCE,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAET,QAAQ,CAAC;MAChD,OAAOU,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,sBAAsB,CAAC,CAAC;IAC1D;IAEA,MAAM;MAAEC,EAAE;MAAEC,QAAQ;MAAEC,WAAW;MAAEC,YAAY;MAAEC,KAAK;MAAEC;IAAO,CAAC,GAAGZ,MAAM;IAEzE,IAAI,CAACO,EAAE,IAAI,CAACC,QAAQ,IAAI,CAACC,WAAW,IAAI,CAACC,YAAY,EAAE;MACrDR,OAAO,CAACC,KAAK,CAAC,0CAA0C,EAAEH,MAAM,CAAC;MACjE,OAAOI,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7D;IAEA,IAAI,CAACG,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,MAAMG,cAAsB,GAAGC,yBAAyB,CAACH,KAAK,CAAC;;IAE/D;IACAI,kBAAkB,CAACN,WAAW,CAAC;IAC/BO,mBAAmB,CAACN,YAAY,CAAC;IACjCO,cAAc,CAAC;MAAEV,EAAE;MAAEC,QAAQ;MAAEG,KAAK,EAAEE,cAAc;MAAED,MAAM,EAAEA,MAAM,aAANA,MAAM,cAANA,MAAM,GAAIM;IAAU,CAAC,CAAC;EACtF,CAAC,MAAM,IAAItB,GAAG,KAAKuB,UAAU,EAAE;IAC7B,IAAI,CAACV,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,YAAY,GAAG,EAAE;IACtBU,OAAO,CAAC,CAAC;EACX;EAEA,OAAO1B,QAAQ;AACjB,CAAC,EACAS,KAAiB,IAAK;EAAA,IAAAkB,eAAA;EACrB,IAAI,CAAC,CAACC,cAAc,CAACC,mBAAmB,EAAED,cAAc,CAACE,YAAY,CAAC,CAACC,QAAQ,EAAAJ,eAAA,GAAClB,KAAK,CAACT,QAAQ,cAAA2B,eAAA,uBAAdA,eAAA,CAAgBK,MAAgB,CAAC,EAAE;IAAA,IAAAC,gBAAA;IACjH,MAAM1B,IAAS,IAAA0B,gBAAA,GAAGxB,KAAK,CAACT,QAAQ,cAAAiC,gBAAA,uBAAdA,gBAAA,CAAgB1B,IAAI;IACtC,MAAM2B,OAAO,GAAG,CAAA3B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE2B,OAAO,KAAIzB,KAAK,CAACyB,OAAO;IAC9CC,KAAK,CAAC1B,KAAK,CAACyB,OAAO,CAAC;EACtB;EAEA,IAAIE,wBAAwB,CAAuD3B,KAAK,CAAC,EAAE;IAAA,IAAA4B,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACzF,MAAMpC,MAAM,GAAG,EAAAkC,gBAAA,GAAA5B,KAAK,CAACT,QAAQ,cAAAqC,gBAAA,uBAAdA,gBAAA,CAAgBlC,MAAM,KAAK;MAAEqC,OAAO,EAAE,CAAC;IAAE,CAAgC;IACxF,MAAM;MAAEtC;IAAI,CAAC,GAAGC,MAAM;IAEtB,IAAIsC,mBAAmB,CAAChC,KAAK,CAAC,IAAIP,GAAG,KAAKwC,iBAAiB,EAAE;MAC3D,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACA,mBAAmB,GAC7C,IAAI,CAACA,mBAAmB,GACxB,IAAI,CAACC,kBAAkB,CAAC,CAAC,CACtBC,IAAI,CAAE9B,WAAW,IAAK;QACrB,IAAI,CAACA,WAAW,GAAGA,WAAW;QAC9BM,kBAAkB,CAACN,WAAW,CAAC;QAC/B,OAAOA,WAAW;MACpB,CAAC,CAAC,CACD+B,OAAO,CAAC,MAAM;QACbC,UAAU,CAAC,MAAM;UACf,IAAI,CAACJ,mBAAmB,GAAG,IAAI;QACjC,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC;MAEV,OAAO,IAAI,CAACA,mBAAmB;IACjC;IAEA,IAAI,CAAC5B,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,YAAY,GAAG,EAAE;IACtBU,OAAO,CAAC,CAAC;IACTS,KAAK,CAAC1B,KAAK,CAAC,EAAA6B,gBAAA,GAAA7B,KAAK,CAACT,QAAQ,cAAAsC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB/B,IAAI,cAAAgC,qBAAA,uBAApBA,qBAAA,CAAsBL,OAAO,KAAI,uCAAuC,CAAC;EACvF;EAEA,OAAOxB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}