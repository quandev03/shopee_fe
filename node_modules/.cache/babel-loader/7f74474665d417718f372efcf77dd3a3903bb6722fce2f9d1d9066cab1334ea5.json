{"ast":null,"code":"import * as yup from 'yup';\nexport const getRules = getValues => ({\n  username: {\n    required: {\n      value: true,\n      message: 'Please enter username!'\n    },\n    minLength: {\n      value: 3,\n      message: 'Length is 3-160 characters'\n    },\n    maxLength: {\n      value: 160,\n      message: 'Length is 3-160 characters'\n    }\n  },\n  password: {\n    required: {\n      value: true,\n      message: 'Please enter password!'\n    },\n    minLength: {\n      value: 6,\n      message: 'Length is 6-160 characters'\n    },\n    maxLength: {\n      value: 160,\n      message: 'Length is 6-160 characters'\n    }\n  },\n  phoneNumber: {\n    required: {\n      value: true,\n      message: 'Please enter phone number!'\n    },\n    pattern: {\n      value: /^\\d{10,11}$/,\n      message: 'Invalid phone number!'\n    }\n  }\n});\nexport const schema = yup.object({\n  username: yup.string().required('Vui lòng nhập username!').min(3, 'Độ dài từ 3-160 ký tự').max(160, 'Độ dài từ 3-160 ký tự'),\n  password: yup.string().required('Vui lòng nhập password!').min(6, 'Độ dài từ 6-160 ký tự').max(160, 'Độ dài từ 6-160 ký tự'),\n  phoneNumber: yup.string().required('Vui lòng nhập số điện thoại!').matches(/^\\d{10,11}$/, 'Số điện thoại không hợp lệ!')\n});\nexport const userSchema = yup.object({\n  username: yup.string().max(160, 'Độ dài tối đa là 160 ký tự'),\n  phoneNumber: yup.string().max(20, 'Độ dài tối đa là 20 ký tự'),\n  address: yup.string().max(160, 'Độ dài tối đa là 160 ký tự'),\n  date_of_birth: yup.date().max(new Date(), 'Vui lòng chọn ngày trong quá khứ'),\n  avatar: yup.string().max(1000, 'Độ dài tối đa là 1000 ký tự'),\n  password: schema.fields['password'],\n  new_password: schema.fields['password']\n});","map":{"version":3,"names":["yup","getRules","getValues","username","required","value","message","minLength","maxLength","password","phoneNumber","pattern","schema","object","string","min","max","matches","userSchema","address","date_of_birth","date","Date","avatar","fields","new_password"],"sources":["/Users/quandev03/Code/UI/Shopee/src/utils/rules.ts"],"sourcesContent":["import { type RegisterOptions, UseFormGetValues } from 'react-hook-form';\nimport * as yup from 'yup';\n\ntype RulesType = { [key in 'username' | 'password' | 'phoneNumber']?: RegisterOptions };\n\nexport const getRules = (getValues?: UseFormGetValues<any>): RulesType => ({\n  username: {\n    required: {\n      value: true,\n      message: 'Please enter username!'\n    },\n    minLength: {\n      value: 3,\n      message: 'Length is 3-160 characters'\n    },\n    maxLength: {\n      value: 160,\n      message: 'Length is 3-160 characters'\n    }\n  },\n  password: {\n    required: {\n      value: true,\n      message: 'Please enter password!'\n    },\n    minLength: {\n      value: 6,\n      message: 'Length is 6-160 characters'\n    },\n    maxLength: {\n      value: 160,\n      message: 'Length is 6-160 characters'\n    }\n  },\n  phoneNumber: {\n    required: {\n      value: true,\n      message: 'Please enter phone number!'\n    },\n    pattern: {\n      value: /^\\d{10,11}$/,\n      message: 'Invalid phone number!'\n    }\n  }\n});\n\nexport const schema = yup.object({\n  username: yup\n      .string()\n      .required('Vui lòng nhập username!')\n      .min(3, 'Độ dài từ 3-160 ký tự')\n      .max(160, 'Độ dài từ 3-160 ký tự'),\n  password: yup\n      .string()\n      .required('Vui lòng nhập password!')\n      .min(6, 'Độ dài từ 6-160 ký tự')\n      .max(160, 'Độ dài từ 6-160 ký tự'),\n  phoneNumber: yup\n      .string()\n      .required('Vui lòng nhập số điện thoại!')\n      .matches(/^\\d{10,11}$/, 'Số điện thoại không hợp lệ!')\n});\n\nexport const userSchema = yup.object({\n  username: yup.string().max(160, 'Độ dài tối đa là 160 ký tự'),\n  phoneNumber: yup.string().max(20, 'Độ dài tối đa là 20 ký tự'),\n  address: yup.string().max(160, 'Độ dài tối đa là 160 ký tự'),\n  date_of_birth: yup.date().max(new Date(), 'Vui lòng chọn ngày trong quá khứ'),\n  avatar: yup.string().max(1000, 'Độ dài tối đa là 1000 ký tự'),\n  password: schema.fields['password'] as yup.StringSchema<string | undefined, yup.AnyObject, undefined, ''>,\n  new_password: schema.fields['password'] as yup.StringSchema<string | undefined, yup.AnyObject, undefined, ''>\n});\n\nexport type UserSchema = yup.InferType<typeof userSchema>;\nexport type Schema = yup.InferType<typeof schema>;\n"],"mappings":"AACA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAI1B,OAAO,MAAMC,QAAQ,GAAIC,SAAiC,KAAiB;EACzEC,QAAQ,EAAE;IACRC,QAAQ,EAAE;MACRC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE;IACX,CAAC;IACDC,SAAS,EAAE;MACTF,KAAK,EAAE,CAAC;MACRC,OAAO,EAAE;IACX,CAAC;IACDE,SAAS,EAAE;MACTH,KAAK,EAAE,GAAG;MACVC,OAAO,EAAE;IACX;EACF,CAAC;EACDG,QAAQ,EAAE;IACRL,QAAQ,EAAE;MACRC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE;IACX,CAAC;IACDC,SAAS,EAAE;MACTF,KAAK,EAAE,CAAC;MACRC,OAAO,EAAE;IACX,CAAC;IACDE,SAAS,EAAE;MACTH,KAAK,EAAE,GAAG;MACVC,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAE;IACXN,QAAQ,EAAE;MACRC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE;IACX,CAAC;IACDK,OAAO,EAAE;MACPN,KAAK,EAAE,aAAa;MACpBC,OAAO,EAAE;IACX;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMM,MAAM,GAAGZ,GAAG,CAACa,MAAM,CAAC;EAC/BV,QAAQ,EAAEH,GAAG,CACRc,MAAM,CAAC,CAAC,CACRV,QAAQ,CAAC,yBAAyB,CAAC,CACnCW,GAAG,CAAC,CAAC,EAAE,uBAAuB,CAAC,CAC/BC,GAAG,CAAC,GAAG,EAAE,uBAAuB,CAAC;EACtCP,QAAQ,EAAET,GAAG,CACRc,MAAM,CAAC,CAAC,CACRV,QAAQ,CAAC,yBAAyB,CAAC,CACnCW,GAAG,CAAC,CAAC,EAAE,uBAAuB,CAAC,CAC/BC,GAAG,CAAC,GAAG,EAAE,uBAAuB,CAAC;EACtCN,WAAW,EAAEV,GAAG,CACXc,MAAM,CAAC,CAAC,CACRV,QAAQ,CAAC,8BAA8B,CAAC,CACxCa,OAAO,CAAC,aAAa,EAAE,6BAA6B;AAC3D,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAGlB,GAAG,CAACa,MAAM,CAAC;EACnCV,QAAQ,EAAEH,GAAG,CAACc,MAAM,CAAC,CAAC,CAACE,GAAG,CAAC,GAAG,EAAE,4BAA4B,CAAC;EAC7DN,WAAW,EAAEV,GAAG,CAACc,MAAM,CAAC,CAAC,CAACE,GAAG,CAAC,EAAE,EAAE,2BAA2B,CAAC;EAC9DG,OAAO,EAAEnB,GAAG,CAACc,MAAM,CAAC,CAAC,CAACE,GAAG,CAAC,GAAG,EAAE,4BAA4B,CAAC;EAC5DI,aAAa,EAAEpB,GAAG,CAACqB,IAAI,CAAC,CAAC,CAACL,GAAG,CAAC,IAAIM,IAAI,CAAC,CAAC,EAAE,kCAAkC,CAAC;EAC7EC,MAAM,EAAEvB,GAAG,CAACc,MAAM,CAAC,CAAC,CAACE,GAAG,CAAC,IAAI,EAAE,6BAA6B,CAAC;EAC7DP,QAAQ,EAAEG,MAAM,CAACY,MAAM,CAAC,UAAU,CAAuE;EACzGC,YAAY,EAAEb,MAAM,CAACY,MAAM,CAAC,UAAU;AACxC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}